package com.opticon.opticonnect.sdk.internal.services.core

import com.opticon.opticonnect.sdk.api.constants.symbology.*
import javax.inject.Inject
import javax.inject.Singleton

@Singleton
internal class SymbologyHandler @Inject constructor() {
    private val symbologyNameMap = mapOf(
        Symbologies.EAN_8 to "EAN-8",
        Symbologies.EAN_13 to "EAN-13",
        Symbologies.DISCRETE_2_OF_5 to "Industrial 2 of 5",
        Symbologies.MATRIX_2_OF_5 to "Matrix 2 of 5",
        Symbologies.INTERLEAVED_2_OF_5 to "Interleaved 2 of 5",
        Symbologies.CODABAR to "Codabar",
        Symbologies.CODE_93 to "Code 93",
        Symbologies.CODE_128 to "Code 128",
        Symbologies.UPC_A to "UPC-A",
        Symbologies.UPC_E to "UPC-E",
        Symbologies.GS1_14 to "GS1 Databar-14",
        Symbologies.GS1_LIMIT to "GS1 DataBar Limited",
        Symbologies.GS1_EXP to "GS1 DataBar Expanded",
        Symbologies.PDF_417 to "PDF417",
        Symbologies.TRI_OPTIC to "Tri-Optic",
        Symbologies.CODE_32 to "Code 32",
        Symbologies.MICRO_PDF_417 to "MicroPDF417",
        Symbologies.QR_CODE to "QR Code",
        Symbologies.AZTEC to "Aztec",
        Symbologies.POSTAL_PLANET to "PLANET",
        Symbologies.POSTAL_POSTNET to "POSTNET",
        Symbologies.POSTAL_4_STATE to "Mailmark4StatePostal",
        Symbologies.POSTAL_ROYAL_MAIL to "UK Postal (Royal Mail)",
        Symbologies.POSTAL_AUSTRALIAN to "Australian Postal",
        Symbologies.POSTAL_KIX to "Netherlands KIX Code",
        Symbologies.POSTAL_JAPAN to "Japanese Postal",
        Symbologies.GS1_128 to "GS1-128",
        Symbologies.MICRO_QR to "Micro QR Code",
        Symbologies.UPC_E1 to "UPC-E1",
        Symbologies.UPC_A_ADD_ON_2 to "UPC-A + 2",
        Symbologies.UPC_E_ADD_ON_2 to "UPC-E + 2",
        Symbologies.EAN_13_ADD_ON_2 to "EAN-13 + 2",
        Symbologies.EAN_8_ADD_ON_2 to "EAN-8 + 2",
        Symbologies.UPC_A_ADD_ON_5 to "UPC-A + 5",
        Symbologies.UPC_E_ADD_ON_5 to "UPC-E + 5",
        Symbologies.EAN_13_ADD_ON_5 to "EAN-13 + 5",
        Symbologies.EAN_8_ADD_ON_5 to "EAN-8 + 5",
        Symbologies.ISSN to "ISSN",
        Symbologies.ISBN to "ISBN",
        Symbologies.UPC_E1_ADD_ON_2 to "UPC-E1 + 2",
        Symbologies.UPC_E1_ADD_ON_5 to "UPC-E1 + 5",
        Symbologies.ISBT_128 to "ISBT 128",
        Symbologies.CODE_39_FULL_ASCII to "Code 39 Full ASCII",
        Symbologies.CODE_39 to "Code 39",
        Symbologies.ITALIAN_PHARMACEUTICAL to "Italian Pharmacode",
        Symbologies.CODABAR_ABC to "ABC Codabar",
        Symbologies.CODABAR_CX to "CX Codabar",
        Symbologies.INDUSTRIAL_2_OF_5 to "Industrial 2 of 5",
        Symbologies.S_CODE to "S-Code",
        Symbologies.CHINESE_POST to "Chinese Post Matrix 2 of 5",
        Symbologies.IATA to "IATA",
        Symbologies.MSI_PLESSEY to "MSI/Plessey",
        Symbologies.TELEPEN to "Telepen",
        Symbologies.UK_PLESSEY to "UK/Plessey",
        Symbologies.CODE_11 to "Code 11",
        Symbologies.KOREAN_POSTAL to "Korean Postal Authority code",
        Symbologies.INTELLIGENT_MAIL to "Intelligent Mail Barcode",
        Symbologies.GS1_DATA_BAR to "GS1 DataBar",
        Symbologies.CC_A to "CC-A",
        Symbologies.CC_B to "CC-B",
        Symbologies.CC_C to "CC-C",
        Symbologies.CODABLOCK_F to "Codablock-F",
        Symbologies.DATA_MATRIX to "DataMatrix",
        Symbologies.CHINESE_SENSIBLE to "Chinese Sensible code",
        Symbologies.MAXI_CODE to "MaxiCode",
        Symbologies.OCR to "OCR",
        Symbologies.DOT_CODE to "DotCode"
    )

    // Lookup function using the map
    fun getSymbologyNameById(id: Int): String {
        return symbologyNameMap[id] ?: ""
    }

    private val symbologyIdByOpticonAndAimIdMap = mapOf(
        Pair("B", "E") to Symbologies.EAN_13,
        Pair("C", "E") to Symbologies.UPC_A,
        Pair("A", "E") to Symbologies.EAN_8,
        Pair("D", "E") to Symbologies.UPC_E,
        Pair("B", "X") to Symbologies.ISBN,
        Pair("V", "A") to Symbologies.CODE_39,
        Pair("R", "F") to Symbologies.CODABAR,
        Pair("O", "S") to Symbologies.DISCRETE_2_OF_5,
        Pair("N", "I") to Symbologies.INTERLEAVED_2_OF_5,
        Pair("U", "G") to Symbologies.CODE_93,
        Pair("T", "C") to Symbologies.CODE_128,
        Pair("Z", "M") to Symbologies.MSI_PLESSEY,
        Pair("P", "R") to Symbologies.IATA,
        Pair("a", "P") to Symbologies.UK_PLESSEY,
        Pair("d", "B") to Symbologies.TELEPEN,
        Pair("Q", "X") to Symbologies.MATRIX_2_OF_5,
        Pair("g", "X") to Symbologies.S_CODE,
        Pair("V", "X") to Symbologies.TRI_OPTIC,
        Pair("W", "A") to Symbologies.CODE_39_FULL_ASCII,
        Pair("Y", "X") to Symbologies.ITALIAN_PHARMACEUTICAL,
        Pair("y", "e") to Symbologies.GS1_DATA_BAR,
        Pair("r", "L") to Symbologies.PDF_417,
        Pair("l", "e") to Symbologies.CC_C,
        Pair("s", "L") to Symbologies.MICRO_PDF_417,
        Pair("m", "e") to Symbologies.CC_A,
        Pair("n", "e") to Symbologies.CC_B,
        Pair("b", "H") to Symbologies.CODE_11,
        Pair("c", "X") to Symbologies.KOREAN_POSTAL,
        Pair("E", "O") to Symbologies.CODABLOCK_F,
        Pair("L", "E") to Symbologies.EAN_13_ADD_ON_2,
        Pair("F", "E") to Symbologies.UPC_A_ADD_ON_2,
        Pair("J", "E") to Symbologies.EAN_8_ADD_ON_2,
        Pair("H", "E") to Symbologies.UPC_E_ADD_ON_2,
        Pair("M", "E") to Symbologies.EAN_13_ADD_ON_5,
        Pair("G", "E") to Symbologies.UPC_A_ADD_ON_5,
        Pair("K", "E") to Symbologies.EAN_8_ADD_ON_5,
        Pair("I", "E") to Symbologies.UPC_E_ADD_ON_5,
        Pair("u", "Q") to Symbologies.QR_CODE,
        Pair("t", "d") to Symbologies.DATA_MATRIX,
        Pair("v", "Q") to Symbologies.MICRO_QR,
        Pair("v", "U") to Symbologies.MAXI_CODE,
        Pair("o", "z") to Symbologies.AZTEC,
        Pair("?", "X") to Symbologies.CHINESE_SENSIBLE
    )

    fun getSymbologyIdByOpticonIdAndAimId(opticonId: String, aimId: String): Int {
        return symbologyIdByOpticonAndAimIdMap[Pair(opticonId, aimId)] ?: -1
    }

    private val symbologyIdByCodeIdMap = mapOf(
        0x01 to Symbologies.EAN_13,
        0x02 to Symbologies.UPC_A,
        0x03 to Symbologies.EAN_8,
        0x04 to Symbologies.UPC_E,
        0x05 to Symbologies.UPC_E1,
        0x06 to Symbologies.ISBN,
        0x07 to Symbologies.ISSN,
        0x08 to Symbologies.ISMN,
        0x09 to Symbologies.CODE_39,
        0x0A to Symbologies.CODABAR,
        0x0B to Symbologies.DISCRETE_2_OF_5,
        0x0C to Symbologies.INTERLEAVED_2_OF_5,
        0x0D to Symbologies.CODE_93,
        0x0E to Symbologies.CODE_128,
        0x0F to Symbologies.MSI_PLESSEY,
        0x10 to Symbologies.IATA,
        0x11 to Symbologies.UK_PLESSEY,
        0x12 to Symbologies.TELEPEN,
        0x13 to Symbologies.MATRIX_2_OF_5,
        0x14 to Symbologies.CHINESE_POST,
        0x15 to Symbologies.CODABAR_ABC,
        0x16 to Symbologies.CODABAR_CX,
        0x17 to Symbologies.S_CODE,
        0x18 to Symbologies.TRI_OPTIC,
        0x19 to Symbologies.CODE_39_FULL_ASCII,
        0x1A to Symbologies.ITALIAN_PHARMACEUTICAL,
        0x1C to Symbologies.GS1_14,
        0x1D to Symbologies.GS1_LIMIT,
        0x1E to Symbologies.GS1_EXP,
        0x1F to Symbologies.PDF_417,
        0x21 to Symbologies.MICRO_PDF_417,
        0x24 to Symbologies.CODE_11,
        0x26 to Symbologies.KOREAN_POSTAL,
        0x27 to Symbologies.CODABLOCK_F,
        0x30 to Symbologies.QR_CODE,
        0x31 to Symbologies.DATA_MATRIX,
        0x32 to Symbologies.MAXI_CODE,
        0x33 to Symbologies.AZTEC,
        0x34 to Symbologies.OCR,
        0x35 to Symbologies.CHINESE_SENSIBLE,
        0x38 to Symbologies.DOT_CODE,
        0x41 to Symbologies.EAN_13_ADD_ON_2,
        0x42 to Symbologies.UPC_A_ADD_ON_2,
        0x43 to Symbologies.EAN_8_ADD_ON_2,
        0x44 to Symbologies.UPC_E_ADD_ON_2,
        0x45 to Symbologies.UPC_E1_ADD_ON_2,
        0x81 to Symbologies.EAN_13_ADD_ON_5,
        0x82 to Symbologies.UPC_A_ADD_ON_5,
        0x83 to Symbologies.EAN_8_ADD_ON_5,
        0x84 to Symbologies.UPC_E_ADD_ON_5,
        0x85 to Symbologies.UPC_E1_ADD_ON_5,
        0xF0 to Symbologies.CODE_39,
        0xF1 to Symbologies.PDF_417,
        0xF2 to Symbologies.CODE_128,
        0xF3 to Symbologies.QR_CODE,
        0xF4 to Symbologies.AZTEC
    )

    fun getSymbologyIdByCodeId(codeId: Int): Int {
        return symbologyIdByCodeIdMap[codeId] ?: 0
    }
}