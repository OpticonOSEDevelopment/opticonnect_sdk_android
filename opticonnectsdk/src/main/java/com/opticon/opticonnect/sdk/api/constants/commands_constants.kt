package com.opticon.opticonnect.sdk.api.constants

// Enable 1D symbologies for scanning.
// These commands enable or disable individual 1D barcode symbologies.
const val ENABLE_1D_ALL_CODES_EXCL_ADDON_ONLY = "[BCA"
const val ENABLE_CODE_11_ONLY = "[BLB"
const val ENABLE_CODE_39_ONLY = "A2"
const val ENABLE_CODE_93_ONLY = "A5"
const val ENABLE_CODE_128_ONLY = "A6"
const val ENABLE_CODABAR_ONLY = "A3"
const val ENABLE_EAN_ONLY = "J4"
const val ENABLE_EAN_8_ONLY = "JA"
const val ENABLE_EAN_13_ONLY = "JG"
const val ENABLE_EAN_PLUS_2_ONLY = "J5"
const val ENABLE_EAN_PLUS_5_ONLY = "J6"
const val ENABLE_EAN_8_PLUS_2_ONLY = "JB"
const val ENABLE_EAN_8_PLUS_5_ONLY = "JC"
const val ENABLE_EAN_13_PLUS_2_ONLY = "JH"
const val ENABLE_EAN_13_PLUS_5_ONLY = "JI"
const val ENABLE_IATA_ONLY = "A4"
const val ENABLE_INDUSTRIAL_2OF5_ONLY = "J7"
const val ENABLE_INTERLEAVED_2OF5_ONLY = "J8"
const val ENABLE_MATRIX_2OF5_ONLY = "AB"
const val ENABLE_MSI_PLESSEY_ONLY = "A7"
const val ENABLE_S_CODE_ONLY = "RA"
const val ENABLE_TELEPEN_ONLY = "A9"
const val ENABLE_TRI_OPTIC_ONLY = "JD"
const val ENABLE_UK_PLESSEY_ONLY = "A1"
const val ENABLE_UPC_A_ONLY = "[J1A"
const val ENABLE_UPC_A_PLUS_2_ONLY = "[J2A"
const val ENABLE_UPC_A_PLUS_5_ONLY = "[J3A"
const val ENABLE_UPC_AE_ONLY = "J1"
const val ENABLE_UPC_AE_PLUS_2_ONLY = "J2"
const val ENABLE_UPC_AE_PLUS_5_ONLY = "J3"
const val ENABLE_UPC_E_ONLY = "[J1B"
const val ENABLE_UPC_E_PLUS_2_ONLY = "[J2B"
const val ENABLE_UPC_E_PLUS_5_ONLY = "[J3B"
const val ENABLE_UPC_E1_ONLY = "[J1C"
const val ENABLE_UPC_E1_PLUS_2_ONLY = "[J2C"
const val ENABLE_UPC_E1_PLUS_5_ONLY = "[J3C"
const val ENABLE_GS1_ALL_TYPES_ONLY = "[BC6"
const val ENABLE_GS1_DATABAR_ONLY = "J9"
const val ENABLE_GS1_DATABAR_LIMITED_ONLY = "JJ"
const val ENABLE_GS1_DATABAR_EXPANDED_ONLY = "JK"

// Enable 2D symbologies for scanning.
const val ENABLE_2D_ALL_CODES_ONLY = "[BCB"
const val ENABLE_AZTEC_CODE_ONLY = "[BC5"
const val ENABLE_AZTEC_RUNES_ONLY = "[BF4"
const val ENABLE_CHINESE_SENSIBLE_CODE_ONLY = "[D4K"
const val ENABLE_CODABLOCK_F_ONLY = "[D4R"
const val ENABLE_DATA_MATRIX_ONLY = "[BC0"
const val ENABLE_DATA_MATRIX_OLD_ECC000_140_ONLY = "[BG2"
const val ENABLE_DOT_CODE_ONLY = "[DOC"
const val ENABLE_MAXICODE_ONLY = "[BC2"
const val ENABLE_MICRO_PDF_417_ONLY = "[BC4"
const val ENABLE_MICRO_QR_CODE_ONLY = "[D38"
const val ENABLE_PDF_417_ONLY = "[BC3"
const val ENABLE_QR_CODE_ONLY = "[BC1"

// Enable postal symbologies for scanning.
const val ENABLE_AUSTRALIAN_POSTAL_ONLY = "[D6O"
const val ENABLE_CHINESE_POST_MATRIX_2OF5_ONLY = "JE"
const val ENABLE_INTELLIGENT_MAIL_BARCODE_ONLY = "[D5H"
const val ENABLE_JAPANESE_POSTAL_ONLY = "[D5R"
const val ENABLE_KOREAN_POSTAL_AUTHORITY_ONLY = "JL"
const val ENABLE_MAILMARK_4_STATE_POSTAL_ONLY = "[DGS"
const val ENABLE_NETHERLANDS_KIX_CODE_ONLY = "[D5M"
const val ENABLE_PLANET_ONLY = "[DG2"
const val ENABLE_POSTNET_ONLY = "[D6C"
const val ENABLE_UK_POSTAL_ONLY = "[DG7"

// Disable symbologies
const val DISABLE_ALL_CODES = "B0"

// Disable 1D symbologies
const val DISABLE_ALL_1D_CODES = "[BCY"
const val DISABLE_CODE_11 = "[BLA"
const val DISABLE_CODE_39 = "VB"
const val DISABLE_CODE_93 = "VD"
const val DISABLE_CODE_128 = "VE"
const val DISABLE_CODABAR = "VC"
const val DISABLE_EAN = "[X4E"
const val DISABLE_EAN_8 = "[DDN"
const val DISABLE_EAN_13 = "[DDM"
const val DISABLE_EAN_PLUS_2 = "[X4F"
const val DISABLE_EAN_PLUS_5 = "[X4G"
const val DISABLE_EAN_8_PLUS_2 = "[X4M"
const val DISABLE_EAN_8_PLUS_5 = "[X4O"
const val DISABLE_EAN_13_PLUS_2 = "[X4N"
const val DISABLE_EAN_13_PLUS_5 = "[X4P"
const val DISABLE_IATA = "VH"
const val DISABLE_INDUSTRIAL_2OF5 = "[X4K"
const val DISABLE_INTERLEAVED_2OF5 = "[X4L"
const val DISABLE_MATRIX_2OF5 = "[DDL"
const val DISABLE_MSI_PLESSEY = "VF"
const val DISABLE_S_CODE = "[DDK"
const val DISABLE_TELEPEN = "VG"
const val DISABLE_TRI_OPTIC = "[DDJ"
const val DISABLE_UK_PLESSEY = "VA"
const val DISABLE_UPC_A = "[V1A"
const val DISABLE_UPC_A_PLUS_2 = "[V2A"
const val DISABLE_UPC_A_PLUS_5 = "[V3A"
const val DISABLE_UPC_AE = "[X4B"
const val DISABLE_UPC_AE_PLUS_2 = "[X4C"
const val DISABLE_UPC_AE_PLUS_5 = "[X4D"
const val DISABLE_UPC_E = "[V1B"
const val DISABLE_UPC_E_PLUS_2 = "[V2B"
const val DISABLE_UPC_E_PLUS_5 = "[V3B"
const val DISABLE_UPC_E1 = "KP"
const val DISABLE_UPC_E1_PLUS_2 = "[V2C"
const val DISABLE_UPC_E1_PLUS_5 = "[V3C"
const val DISABLE_GS1_ALL_TYPES = "[BCU"
const val DISABLE_GS1_DATABAR = "SJ"
const val DISABLE_GS1_DATABAR_LIMITED = "SK"
const val DISABLE_GS1_DATABAR_EXPANDED = "SL"

// Disable 2D symbologies
const val DISABLE_ALL_2D_CODES = "[BCZ"
const val DISABLE_AZTEC_CODE = "[BCT"
const val DISABLE_AZTEC_RUNES = "[BF3"
const val DISABLE_CHINESE_SENSIBLE_CODE = "[D4M"
const val DISABLE_CODABLOCK_F = "[D4Q"
const val DISABLE_DATA_MATRIX = "[BCO"
const val DISABLE_DATA_MATRIX_OLD_ECC000_140 = "[BG1"
const val DISABLE_DOT_CODE = "[DOE"
const val DISABLE_MAXICODE = "[BCQ"
const val DISABLE_MICRO_PDF_417 = "[BCS"
const val DISABLE_MICRO_QR_CODE = "[D2V"
const val DISABLE_PDF_417 = "[BCR"
const val DISABLE_QR_CODE = "[BCP"

// Disable postal symbologies
const val DISABLE_AUSTRALIAN_POSTAL = "[D6N"
const val DISABLE_CHINESE_POST_MATRIX_2OF5 = "JT"
const val DISABLE_INTELLIGENT_MAIL_BARCODE = "[D5G"
const val DISABLE_JAPANESE_POSTAL = "[D5Q"
const val DISABLE_KOREAN_POSTAL_AUTHORITY = "WI"
const val DISABLE_MAILMARK_4_STATE_POSTAL = "[DGU"
const val DISABLE_NETHERLANDS_KIX_CODE = "[D5L"
const val DISABLE_PLANET = "[DG4"
const val DISABLE_POSTNET = "[D6B"
const val DISABLE_UK_POSTAL = "[DG9"

// Enable all symbologies
const val ENABLE_ALL_CODES_EXCL_ADDON = "A0"

// Enable 1D symbologies
const val ENABLE_ALL_1D_CODES_EXCL_ADDON = "[BCM"
const val ENABLE_CODE_11 = "[BLC"
const val ENABLE_CODE_39 = "B2"
const val ENABLE_CODE_93 = "B5"
const val ENABLE_CODE_128 = "B6"
const val ENABLE_CODABAR = "B3"
const val ENABLE_EAN = "R4"
const val ENABLE_EAN_8 = "JO"
const val ENABLE_EAN_13 = "JU"
const val ENABLE_EAN_PLUS_2 = "R5"
const val ENABLE_EAN_PLUS_5 = "R6"
const val ENABLE_EAN_8_PLUS_2 = "JP"
const val ENABLE_EAN_8_PLUS_5 = "JQ"
const val ENABLE_EAN_13_PLUS_2 = "JV"
const val ENABLE_EAN_13_PLUS_5 = "JW"
const val ENABLE_IATA = "B4"
const val ENABLE_INDUSTRIAL_2OF5 = "R7"
const val ENABLE_INTERLEAVED_2OF5 = "R8"
const val ENABLE_MATRIX_2OF5 = "BB"
const val ENABLE_MSI_PLESSEY = "B7"
const val ENABLE_S_CODE = "R9"
const val ENABLE_TELEPEN = "B9"
const val ENABLE_TRI_OPTIC = "JZ"
const val ENABLE_UK_PLESSEY = "B1"
const val ENABLE_UPC_A = "[R1A"
const val ENABLE_UPC_A_PLUS_2 = "[R2A"
const val ENABLE_UPC_A_PLUS_5 = "[R3A"
const val ENABLE_UPC_AE = "R1"
const val ENABLE_UPC_AE_PLUS_2 = "R2"
const val ENABLE_UPC_AE_PLUS_5 = "R3"
const val ENABLE_UPC_E = "[R1B"
const val ENABLE_UPC_E_PLUS_2 = "[R2B"
const val ENABLE_UPC_E_PLUS_5 = "[R3B"
const val ENABLE_UPC_E1 = "KQ"
const val ENABLE_UPC_E1_PLUS_2 = "[R2C"
const val ENABLE_UPC_E1_PLUS_5 = "[R3C"
const val ENABLE_GS1_ALL_TYPES = "[BCI"
const val ENABLE_GS1_DATABAR = "JX"
const val ENABLE_GS1_DATABAR_LIMITED = "JY"
const val ENABLE_GS1_DATABAR_EXPANDED = "DR"

// Enable 2D symbologies
const val ENABLE_ALL_2D_CODES = "[BCN"
const val ENABLE_AZTEC_CODE = "[BCH"
const val ENABLE_AZTEC_RUNES = "[BF2"
const val ENABLE_CHINESE_SENSIBLE_CODE = "[D4L"
const val ENABLE_CODABLOCK_F = "[D4P"
const val ENABLE_DATA_MATRIX = "[BCC"
const val ENABLE_DATA_MATRIX_OLD_ECC000_140 = "[BG0"
const val ENABLE_DOT_CODE = "[DOD"
const val ENABLE_MAXICODE = "[BCE"
const val ENABLE_MICRO_PDF_417 = "[BCG"
const val ENABLE_MICRO_QR_CODE = "[D2U"
const val ENABLE_PDF_417 = "[BCF"
const val ENABLE_QR_CODE = "[BCD"

// Enable postal symbologies
const val ENABLE_AUSTRALIAN_POSTAL = "[D6M"
const val ENABLE_CHINESE_POST_MATRIX_2OF5 = "JS"
const val ENABLE_INTELLIGENT_MAIL_BARCODE = "[D5F"
const val ENABLE_JAPANESE_POSTAL = "[D5P"
const val ENABLE_KOREAN_POSTAL_AUTHORITY = "WH"
const val ENABLE_MAILMARK_4_STATE_POSTAL = "[DGT"
const val ENABLE_NETHERLANDS_KIX_CODE = "[D5K"
const val ENABLE_PLANET = "[DG3"
const val ENABLE_POSTNET = "[D6A"
const val ENABLE_UK_POSTAL = "[DG8"

// Code-specific settings commands
// Two of Five and S Code settings
const val TWO_OF_FIVE_AND_S_CODE_CHECK_CD = "G1"
const val TWO_OF_FIVE_AND_S_CODE_DO_NOT_CHECK_CD = "G0"
const val TWO_OF_FIVE_AND_S_CODE_TRANSMIT_CD = "E0"
const val TWO_OF_FIVE_AND_S_CODE_DO_NOT_TRANSMIT_CD = "E1"
const val TWO_OF_FIVE_AND_S_CODE_ENABLE_SPACE_CHECK_INDUSTRIAL_2OF5 = "GJ"
const val TWO_OF_FIVE_AND_S_CODE_DISABLE_SPACE_CHECK_INDUSTRIAL_2OF5 = "GK"
const val TWO_OF_FIVE_AND_S_CODE_TRANSMIT_AS_INTERLEAVED_2OF5 = "GG"
const val TWO_OF_FIVE_AND_S_CODE_DO_NOT_TRANSMIT_AS_INTERLEAVED_2OF5 = "GH"
const val TWO_OF_FIVE_AND_S_CODE_MINIMUM_LENGTH_ONE_CHAR = "GE"
const val TWO_OF_FIVE_AND_S_CODE_MINIMUM_LENGTH_THREE_CHARS = "GF"
const val TWO_OF_FIVE_AND_S_CODE_MINIMUM_LENGTH_FIVE_CHARS = "GI"

// Codabar settings
const val CODABAR_NORMAL = "HA"
const val CODABAR_ABC_CODE_ONLY = "H4"
const val CODABAR_CX_CODE_ONLY = "H5"
const val CODABAR_ABC_AND_CX = "H3"
const val CODABAR_CHECK_CD = "H6"
const val CODABAR_DO_NOT_CHECK_CD = "H7"
const val CODABAR_TRANSMIT_CD = "H8"
const val CODABAR_DO_NOT_TRANSMIT_CD = "H9"
const val CODABAR_DO_NOT_TRANSMIT_ST_SP = "F0"
const val CODABAR_ST_SP_ABCD_ABCD = "F3"
const val CODABAR_ST_SP_ABCD_ABCD_LOWERCASE = "F4"
const val CODABAR_ST_SP_ABCD_TNE = "F1"
const val CODABAR_ST_SP_ABCD_TNE_LOWERCASE = "F2"
const val CODABAR_ST_SP_DC1_DC2_DC3_DC4 = "HJ"
const val CODABAR_DISABLE_SPACE_INSERTION = "HE"
const val CODABAR_ENABLE_SPACE_INSERTION = "HD"
const val CODABAR_ENABLE_INTERCHARACTER_GAP_CHECK = "HH"
const val CODABAR_DISABLE_INTERCHARACTER_GAP_CHECK = "HI"
const val CODABAR_MINIMUM_LENGTH_ONE_CHAR = "HC"
const val CODABAR_MINIMUM_LENGTH_THREE_CHARS = "HB"
const val CODABAR_MINIMUM_LENGTH_FIVE_CHARS = "HF"

// Code 11 settings
const val CODE_11_DO_NOT_CHECK_CD = "[BLF"
const val CODE_11_CHECK_1_CD = "[BLG"
const val CODE_11_CHECK_2_CDS = "[BLH"
const val CODE_11_CHECK_1_OR_2_CDS = "[BLI"
const val CODE_11_DO_NOT_TRANSMIT_CD = "[BLJ"
const val CODE_11_TRANSMIT_CD = "[BLK"

// Code 39 settings
const val NORMAL_CODE_39 = "D5"
const val FULL_ASCII_CODE_39 = "D4"
const val FULL_ASCII_CODE_39_IF_POSSIBLE = "+K"
const val IT_PHARMACEUTICAL_ONLY = "D6"
const val IT_PHARMACEUTICAL_IF_POSSIBLE = "D7"
const val CODE_39_CHECK_CD = "C0"
const val CODE_39_DO_NOT_CHECK_CD = "C1"
const val CODE_39_TRANSMIT_CD = "D9"
const val CODE_39_DO_NOT_TRANSMIT_CD = "D8"
const val CODE_39_TRANSMIT_ST_SP = "D0"
const val CODE_39_DO_NOT_TRANSMIT_ST_SP = "D1"
const val CODE_39_DO_NOT_TRANSMIT_LEADING_A_FOR_IT_PHARM = "DA"
const val CODE_39_TRANSMIT_LEADING_A_FOR_IT_PHARM = "DB"
const val CODE_39_MIN_LENGTH_3_DIGITS = "8D"
const val CODE_39_MIN_LENGTH_1_DIGIT = "8E"
const val CODE_39_ENABLE_CONCATENATION = "+L"
const val CODE_39_DISABLE_CONCATENATION = "+M"

// Code 93 settings
const val CODE_93_DO_NOT_CHECK_CD = "9Q"
const val CODE_93_CHECK_CD = "AC"
const val CODE_93_DO_NOT_TRANSMIT_CD = "DZ"
const val CODE_93_TRANSMIT_CD = "DY"
const val CODE_93_ENABLE_CONCATENATION = "+V"
const val CODE_93_DISABLE_CONCATENATION = "+W"

// Code 128 settings
const val CODE_128_DISABLE_GS1_128 = "OF"
const val CODE_128_ENABLE_GS1_128_ONLY = "JF"
const val CODE_128_ENABLE_GS1_128_IF_POSSIBLE = "OG"
const val CODE_128_DISABLE_GS1_128_CONVERSION = "[X/0"
const val CODE_128_ENABLE_GS1_128_CONVERSION_MODE_1 = "[X/1"
const val CODE_128_ENABLE_GS1_128_CONVERSION_MODE_2 = "[X/2"
const val CODE_128_ENABLE_GS1_128_CONVERSION_MODE_3 = "[X/3"
const val CODE_128_ENABLE_GS1_128_CONVERSION_MODE_4 = "[X/4"
const val CODE_128_DISABLE_LEADING_C1_OUTPUT = "[X/Q"
const val CODE_128_ENABLE_LEADING_C1_OUTPUT = "[X/R"
const val CODE_128_DISABLE_CONCATENATION = "MP"
const val CODE_128_ENABLE_CONCATENATION = "MO"

// Composite Code settings
const val COMPOSITE_OUTPUT_1D_AND_2D_COMPONENT = "[BL2"
const val COMPOSITE_OUTPUT_2D_COMPONENT = "[BL1"
const val COMPOSITE_OUTPUT_1D_COMPONENT = "[BL0"
const val COMPOSITE_DO_NOT_IGNORE_LINK_FLAG = "RQ"
const val COMPOSITE_IGNORE_LINK_FLAG = "RP"
const val DISABLE_COMPOSITE_GS1 = "[BHF"
const val ENABLE_COMPOSITE_GS1 = "[BHE"
const val DISABLE_COMPOSITE_EAN_UPC = "[D1W"
const val ENABLE_COMPOSITE_EAN_UPC = "[D1V"

// EAN settings
const val EAN_8_TRANSMIT_CD = "6I"
const val EAN_8_DO_NOT_TRANSMIT_CD = "6H"
const val EAN_13_TRANSMIT_CD = "6K"
const val EAN_13_DO_NOT_TRANSMIT_CD = "6J"
const val EAN_DISABLE_ISSN_TRANSLATION = "HN"
const val EAN_ENABLE_ISSN_TRANSLATION = "HO"
const val EAN_ENABLE_ISSN_IF_POSSIBLE = "4V"
const val EAN_DISABLE_ISMN_TRANSLATION = "IO"
const val EAN_ENABLE_ISMN_TRANSLATION = "IP"
const val EAN_ENABLE_ISMN_IF_POSSIBLE = "IQ"
const val EAN_DISABLE_ISBN_TRANSLATION = "IB"
const val EAN_ENABLE_ISBN_TRANSLATION = "IA"
const val EAN_ENABLE_ISBN_IF_POSSIBLE = "IK"
const val EAN_ENABLE_FORCED_ADDON_378_379_529 = "-G"
const val EAN_DISABLE_FORCED_ADDON_378_379_529 = "-H"
const val EAN_ENABLE_FORCED_ADDON_434_439_414_419_977_978 = "-C"
const val EAN_DISABLE_FORCED_ADDON_434_439_414_419_977_978 = "-D"

// GS1 DataBar settings
const val GS1_DATABAR_TRANSMIT_CD = "DL"
const val GS1_DATABAR_DO_NOT_TRANSMIT_CD = "DM"
const val GS1_DATABAR_TRANSMIT_AI = "DS"
const val GS1_DATABAR_DO_NOT_TRANSMIT_AI = "DT"

// IATA settings
const val IATA_DO_NOT_CHECK_CD = "4H"
const val IATA_CHECK_FC_AND_SN_ONLY = "4I"
const val IATA_CHECK_CPN_FC_AND_SN = "4J"
const val IATA_CHECK_CPN_AC_FC_AND_SN = "4K"
const val IATA_TRANSMIT_CD = "4L"
const val IATA_DO_NOT_TRANSMIT_CD = "4M"

// Korean Postal settings
const val KOREAN_POSTAL_TRANSMIT_CD = "*+"
const val KOREAN_POSTAL_DO_NOT_TRANSMIT_CD = "*-"
const val KOREAN_POSTAL_TRANSMIT_DASH = "*."
const val KOREAN_POSTAL_DO_NOT_TRANSMIT_DASH = "*/"
const val KOREAN_POSTAL_ORIENTATION_NORMAL = "*A"
const val KOREAN_POSTAL_ORIENTATION_UPSIDE_DOWN = "*B"
const val KOREAN_POSTAL_UPSIDE_DOWN_READING_DISABLED = "*8"
const val KOREAN_POSTAL_UPSIDE_DOWN_READING_ENABLED = "*9"

// MSI Plessey settings
const val MSI_PLESSEY_DO_NOT_CHECK_CD = "4A"
const val MSI_PLESSEY_CHECK_1_CD_MOD_10 = "4B"
const val MSI_PLESSEY_CHECK_2_CDS_MOD_10_MOD_10 = "4C"
const val MSI_PLESSEY_CHECK_2_CDS_MOD_10_MOD_11 = "4D"
const val MSI_PLESSEY_CHECK_2_CDS_MOD_11_MOD_10 = "4R"
const val MSI_PLESSEY_CHECK_2_CDS_MOD_11_MOD_11 = "4S"
const val MSI_PLESSEY_TRANSMIT_CD_1 = "4E"
const val MSI_PLESSEY_TRANSMIT_CD_1_AND_CD_2 = "4F"
const val MSI_PLESSEY_DO_NOT_TRANSMIT_CD = "4G"

// Telepen settings
const val TELEPEN_NUMERIC_MODE = "D2"
const val TELEPEN_ASCII_MODE = "D3"

// UK Plessey settings
const val UK_PLESSEY_TRANSMIT_CDS = "4N"
const val UK_PLESSEY_DO_NOT_TRANSMIT_CDS = "4O"
const val UK_PLESSEY_DISABLE_SPACE_INSERTION = "DO"
const val UK_PLESSEY_ENABLE_SPACE_INSERTION = "DN"
const val UK_PLESSEY_DISABLE_A_TO_X_CONVERSION = "DP"
const val UK_PLESSEY_ENABLE_A_TO_X_CONVERSION = "DQ"

// UPC-A settings
const val UPCA_NO_LEADING_ZERO_TRANSMIT_CD = "E3"
const val UPCA_NO_LEADING_ZERO_DO_NOT_TRANSMIT_CD = "E5"
const val UPCA_LEADING_ZERO_TRANSMIT_CD = "E2"
const val UPCA_LEADING_ZERO_DO_NOT_TRANSMIT_CD = "E4"

// UPC-E settings
const val UPCE_NO_LEADING_ZERO_TRANSMIT_CD = "E7"
const val UPCE_NO_LEADING_ZERO_DO_NOT_TRANSMIT_CD = "E9"
const val UPCE_LEADING_ZERO_TRANSMIT_CD = "E6"
const val UPCE_LEADING_ZERO_DO_NOT_TRANSMIT_CD = "E8"
const val UPCE_TRANSMIT_AS_IS = "6Q"
const val UPCE_TRANSMIT_AS_UPCA = "6P"

// Commands for configuring read settings.
const val SINGLE_READ = "S0"
const val MULTIPLE_READ = "S1"
const val CONTINUOUS_READ = "S2"

const val READ_TIME_0_SECONDS = "Y0"
const val READ_TIME_1_SECOND = "Y1"
const val READ_TIME_2_SECONDS = "Y2"
const val READ_TIME_3_SECONDS = "Y3"
const val READ_TIME_4_SECONDS = "Y4"
const val READ_TIME_5_SECONDS = "Y5"
const val READ_TIME_6_SECONDS = "Y6"
const val READ_TIME_7_SECONDS = "Y7"
const val READ_TIME_8_SECONDS = "Y8"
const val READ_TIME_9_SECONDS = "Y9"
const val READ_TIME_INDEFINITELY = "YM"

const val POSITIVE_BARCODES = "V2"
const val NEGATIVE_BARCODES = "V3"
const val POSITIVE_AND_NEGATIVE_BARCODES = "V4"

// Commands for configuring floodlight settings.
const val ENABLE_FLOODLIGHT = "[D39"
const val DISABLE_FLOODLIGHT = "[D3A"
const val ALTERNATING_FLOODLIGHT = "[D3B"
const val PREVENT_SPECULAR_REFLECTION = "[D3Q"

// Commands for configuring aiming settings.
const val AIMING_ENABLED = "[D3D"
const val AIMING_DISABLED = "[D3E"

// Commands for configuring trigger settings.
const val TRIGGER_REPEAT_ENABLED = "/M"
const val TRIGGER_REPEAT_DISABLED = "/K"

const val ENABLE_TRIGGER = "S8"
const val DISABLE_TRIGGER = "S7"

const val DELETE_KEY_ENABLED = "]DELE"
const val DELETE_KEY_DISABLED = "]DELD"


// Commands for configuring indicator settings.
const val NON_PERSISTENT_SET_BUZZER = "[BQX"
const val PERSISTENT_SET_BUZZER = "[BQY"

const val NON_PERSISTENT_SET_LED = "[BMB"
const val PERSISTENT_SET_LED = "[BMC"

const val BUZZER_DISABLED = "W0"
const val BUZZER_ENABLED = "W8"

const val SINGLE_TONE_BUZZER = "W1"
const val HIGH_LOW_BUZZER = "W2"
const val LOW_HIGH_BUZZER = "W3"

const val BUZZER_DURATION_50_MS = "W7"
const val BUZZER_DURATION_75_MS = "[EFW"
const val BUZZER_DURATION_100_MS = "W4"
const val BUZZER_DURATION_200_MS = "W5"
const val BUZZER_DURATION_400_MS = "W6"

const val BUZZER_LOUDNESS_MINIMUM = "T3"
const val BUZZER_LOUDNESS_NORMAL = "T2"
const val BUZZER_LOUDNESS_LOUD = "T1"
const val BUZZER_LOUDNESS_MAXIMUM = "T0"

const val BUZZER_ON_KEYCLICK_ON = "WK"
const val BUZZER_ON_KEYCLICK_OFF = "WL"

const val VIBRATOR_ENABLED = "[EBI"
const val VIBRATOR_DISABLED = "[EBH"

const val VIBRATOR_DURATION_50_MS = "[EBJ"
const val VIBRATOR_DURATION_100_MS = "[EBK"

const val ENABLE_VIBRATION_ON_BUTTON_PRESS = "BO"
const val DISABLE_VIBRATION_ON_BUTTON_PRESS = "BP"

const val BATTERY_CHARGING_INDICATOR_ENABLED = "7G"
const val BATTERY_CHARGING_INDICATOR_DISABLED = "8Z"

const val GET_BATTERY_PERCENTAGE = "]BATT"

// Commands for configuring good/bad read settings.
const val GOOD_READ_BUZZER = "B"
const val GOOD_READ_LED = "L"
const val WORK_VIBRATION = "V"

const val BAD_READ_BUZZER = "E"
const val BAD_READ_LED = "N"

const val READ_1_TIME_REDUNDANCY_0 = "X0"
const val READ_2_TIMES_REDUNDANCY_1 = "X1"
const val READ_3_TIMES_REDUNDANCY_2 = "X2"
const val READ_4_TIMES_REDUNDANCY_3 = "X3"
const val READ_5_TIMES_REDUNDANCY_4 = "BS"
const val READ_6_TIMES_REDUNDANCY_5 = "BT"
const val READ_7_TIMES_REDUNDANCY_6 = "BU"
const val READ_8_TIMES_REDUNDANCY_7 = "BV"
const val READ_9_TIMES_REDUNDANCY_8 = "BW"

const val GOOD_READ_LED_DURATION_DISABLED = "T4"
const val GOOD_READ_LED_DURATION_10_MS = "[XT9"
const val GOOD_READ_LED_DURATION_60_MS = "[XTH"
const val GOOD_READ_LED_DURATION_100_MS = "[XT8"
const val GOOD_READ_LED_DURATION_200_MS = "T5"
const val GOOD_READ_LED_DURATION_400_MS = "T6"
const val GOOD_READ_LED_DURATION_500_MS = "[XTI"
const val GOOD_READ_LED_DURATION_800_MS = "T7"
const val GOOD_READ_LED_DURATION_2000_MS = "[XTJ"

// Commands for configuring formatting settings.
const val PREAMBLE = "MZ"
const val POSTAMBLE = "PS"

// Prefix codes for symbologies.
const val PREFIX_ALL_CODES = "RY"
const val UPCA_PREFIX = "N1"
const val UPCA_ADDON_PREFIX = "M0"
const val UPCE_PREFIX = "N2"
const val UPCE_ADDON_PREFIX = "M1"
const val EAN13_PREFIX = "N3"
const val EAN13_ADDON_PREFIX = "M2"
const val EAN8_PREFIX = "N4"
const val EAN8_ADDON_PREFIX = "M3"
const val CODE39_PREFIX = "M4"
const val CODABAR_PREFIX = "M5"
const val INDUSTRIAL_2OF5_PREFIX = "M6"
const val INTERLEAVED_2OF5_PREFIX = "M7"
const val S_CODE_PREFIX = "MB"
const val MATRIX_2OF5_PREFIX = "GL"
const val IATA_PREFIX = "I8"
const val CODE93_PREFIX = "M8"
const val CODE128_PREFIX = "M9"
const val GS1_128_PREFIX = "[XMX"
const val MSI_PLESSEY_PREFIX = "[MSI"
const val TELEPEN_PREFIX = "L8"
const val UK_PLESSEY_PREFIX = "MA"
const val DATA_MATRIX_PREFIX = "MD"
const val QR_CODE_PREFIX = "MK"
const val MAXICODE_PREFIX = "ML"
const val PDF417_PREFIX = "OC"
const val MICRO_PDF417_PREFIX = "OD"
const val AZTEC_PREFIX = "[BFQ"
const val CODE11_PREFIX = "[BLD"
const val TRI_OPTIC_PREFIX = "MC"
const val KOREAN_POSTAL_AUTHORITY_PREFIX = "*$"
const val DOT_CODE_PREFIX = "[DOF"
const val INTELLIGENT_MAIL_PREFIX = "[D5I"
const val POSTNET_PREFIX = "[D6D"
const val PLANET_PREFIX = "[DG5"
const val JAPANESE_POSTAL_PREFIX = "[DSS"
const val NETHERLANDS_KIX_PREFIX = "[DSN"
const val UK_POSTAL_PREFIX = "[DGA"
const val AUSTRALIAN_POSTAL_PREFIX = "[D6P"
const val MAILMARK_4_STATE_POSTAL_PREFIX = "[D6Q"
const val GS1_DATABAR_OMNIDIRECTIONAL_PREFIX = "[D6G"
const val GS1_DATABAR_LIMITED_PREFIX = "[D5Q"
const val GS1_DATABAR_EXPANDED_PREFIX = "[D6I"
const val GS1_COMPOSITE_CODE_PREFIX = "RR"
const val CODABLOCK_F_PREFIX = "[D4S"
const val CHINESE_SENSIBLE_CODE_PREFIX = "[D4N"
const val MACHINE_READABLE_PASSPORTS_PREFIX = "[DJJ"
const val MACHINE_READABLE_VISA_A_PREFIX = "[DJK"
const val MACHINE_READABLE_VISA_B_PREFIX = "[DJI"
const val OFFICIAL_TRAVEL_DOCUMENTS_1_PREFIX = "[DJM"
const val OFFICIAL_TRAVEL_DOCUMENTS_2_PREFIX = "[DJN"
const val ISBN_PREFIX = "[DJO"
const val JAPANESE_BOOK_PRICE_PREFIX = "[DJY"
const val JAPANESE_DRIVER_LICENSE_PREFIX = "[DJX"
const val JAPANESE_PRIVATE_NUMBER_PREFIX = "[DKR"
const val CLEAR_PREFIXES = "MG"

// Suffix codes for symbologies.
const val SUFFIX_ALL_CODES = "RZ"
const val UPCA_SUFFIX = "N6"
const val UPCA_ADDON_SUFFIX = "O0"
const val UPCE_SUFFIX = "N7"
const val UPCE_ADDON_SUFFIX = "O1"
const val EAN13_SUFFIX = "N8"
const val EAN13_ADDON_SUFFIX = "O2"
const val EAN8_SUFFIX = "N9"
const val EAN8_ADDON_SUFFIX = "O3"
const val CODE39_SUFFIX = "O4"
const val CODABAR_SUFFIX = "O5"
const val INDUSTRIAL_2OF5_SUFFIX = "O6"
const val INTERLEAVED_2OF5_SUFFIX = "O7"
const val S_CODE_SUFFIX = "OB"
const val MATRIX_2OF5_SUFFIX = "GM"
const val IATA_SUFFIX = "I9"
const val CODE93_SUFFIX = "O8"
const val CODE128_SUFFIX = "O9"
const val GS1_128_SUFFIX = "[XOX"
const val MSI_PLESSEY_SUFFIX = "N5"
const val TELEPEN_SUFFIX = "L9"
const val UK_PLESSEY_SUFFIX = "OA"
const val DATA_MATRIX_SUFFIX = "PO"
const val QR_CODE_SUFFIX = "PW"
const val MAXICODE_SUFFIX = "PX"
const val PDF417_SUFFIX = "PY"
const val GS1_DATABAR_SUFFIX = "PQ"
const val MICRO_PDF417_SUFFIX = "PZ"
const val AZTEC_SUFFIX = "[BF1"
const val CODE11_SUFFIX = "[BLE"
const val TRI_OPTIC_SUFFIX = "PN"
const val KOREAN_POSTAL_AUTHORITY_SUFFIX = "*%"
const val DOT_CODE_SUFFIX = "[DOG"
const val INTELLIGENT_MAIL_SUFFIX = "[D5J"
const val POSTNET_SUFFIX = "[D6E"
const val PLANET_SUFFIX = "[DG4"
const val JAPANESE_POSTAL_SUFFIX = "[D5T"
const val NETHERLANDS_KIX_SUFFIX = "[D5O"
const val UK_POSTAL_SUFFIX = "[DBG"
const val AUSTRALIAN_POSTAL_SUFFIX = "[D6Q"
const val MAILMARK_4_STATE_POSTAL_SUFFIX = "[DGW"
const val GS1_DATABAR_OMNIDIRECTIONAL_SUFFIX = "[D6J"
const val GS1_DATABAR_LIMITED_SUFFIX = "[D6K"
const val GS1_DATABAR_EXPANDED_SUFFIX = "[D6L"
const val GS1_COMPOSITE_CODE_SUFFIX = "RS"
const val CODABLOCK_F_SUFFIX = "[D4T"
const val CHINESE_SENSIBLE_CODE_SUFFIX = "[D4O"
const val MACHINE_READABLE_PASSPORTS_SUFFIX = "[DJP"
const val MACHINE_READABLE_VISA_A_SUFFIX = "[DJQ"
const val MACHINE_READABLE_VISA_B_SUFFIX = "[DJR"
const val OFFICIAL_TRAVEL_DOCUMENTS_1_SUFFIX = "[DJS"
const val OFFICIAL_TRAVEL_DOCUMENTS_2_SUFFIX = "[DJT"
const val ISBN_SUFFIX = "[DJU"
const val JAPANESE_BOOK_PRICE_SUFFIX = "[DJZ"
const val JAPANESE_DRIVER_LICENSE_SUFFIX = "[DKS"
const val JAPANESE_PRIVATE_NUMBER_SUFFIX = "[DKT"
const val CLEAR_SUFFIXES = "PR"

// AIM Code Identification
const val AIM_CODE_IDENTIFICATION = "\$1"
const val CODE_IDENTIFICATION = "\$2"
const val CODE_LENGTH = "\$6"

// Direct Input Key Settings
const val DIRECT_INPUT_KEY_0 = "Q0"
const val DIRECT_INPUT_KEY_1 = "Q1"
const val DIRECT_INPUT_KEY_2 = "Q2"
const val DIRECT_INPUT_KEY_3 = "Q3"
const val DIRECT_INPUT_KEY_4 = "Q4"
const val DIRECT_INPUT_KEY_5 = "Q5"
const val DIRECT_INPUT_KEY_6 = "Q6"
const val DIRECT_INPUT_KEY_7 = "Q7"
const val DIRECT_INPUT_KEY_8 = "Q8"
const val DIRECT_INPUT_KEY_9 = "Q9"
const val DIRECT_INPUT_KEY_M = "0M"
const val DIRECT_INPUT_KEY_N = "0N"

// Commands for configuring communication settings.
const val BLUETOOTH_LOW_ENERGY_DEFAULT = "]EBLE"
const val USB_CDC_OPTICONNECT_DEFAULT = "[BQO"
const val ENABLE_ACK_NACK = "WC"
const val TRANSMIT_SOFTWARE_VERSION = "Z1"
const val SAVE_SETTINGS = "Z2"

const val TRANSMIT_DEVICE_INFORMATION = "[EFK"
const val FETCH_SETTINGS = "[BPT"
const val SET_DOWNLOAD_MODE = "[XLT"
const val SET_BLUETOOTH_NAME = "]BLNS"
const val END_SET_BLUETOOTH_NAME = "]BLNE"

// Commands for barcode validation.
const val BARCODE_VALIDATION_DISABLED = "P0"
const val BARCODE_VALIDATION_DEFAULT = "P3"
const val BARCODE_VALIDATION_NO_RESPONSE_IS_GOOD_READ = "P4"

const val ENABLE_MEMORIZING = "]DTME"
const val DISABLE_MEMORIZING = "]DTMD"

const val BARCODE_VALIDATION_GOOD_READ = "[ACK"
const val BARCODE_VALIDATION_BAD_READ = "[DC2"
const val BARCODE_VALIDATION_NO_RESPONSE = "[DC1"
const val BARCODE_VALIDATION_RESEND = "[NAK"

// Commands for miscellaneous settings.
const val SET_CONNECTION_POOL_ID = "[BBP"
const val SIMPLE_SOUND_RESPONSE_COMMAND = "[BQS"

// Data Wizard configuration commands
const val DATA_WIZARD_COMMAND_PREFIX_0 = "A0"
const val DATA_WIZARD_COMMAND_PREFIX_1 = "A1"
const val DATA_WIZARD_CONFIGURATION_0 = "[A00"
const val DATA_WIZARD_CONFIGURATION_1 = "[A01"
const val DATA_WIZARD_CONFIGURATION_2 = "[A02"
const val DATA_WIZARD_CONFIGURATION_3 = "[A03"
const val DATA_WIZARD_CONFIGURATION_4 = "[A04"
const val DATA_WIZARD_CONFIGURATION_5 = "[A05"
const val DATA_WIZARD_CONFIGURATION_6 = "[A06"
const val DATA_WIZARD_CONFIGURATION_7 = "[A07"

const val DATA_WIZARD_ENABLE_CONFIGURATION_0 = "[A0A"
const val DATA_WIZARD_ENABLE_CONFIGURATION_1 = "[A0B"
const val DATA_WIZARD_ENABLE_CONFIGURATION_2 = "[A0C"
const val DATA_WIZARD_ENABLE_CONFIGURATION_3 = "[A0D"
const val DATA_WIZARD_ENABLE_CONFIGURATION_4 = "[A0E"
const val DATA_WIZARD_ENABLE_CONFIGURATION_5 = "[A0F"
const val DATA_WIZARD_ENABLE_CONFIGURATION_6 = "[A0G"
const val DATA_WIZARD_ENABLE_CONFIGURATION_7 = "[A0H"

const val DATA_WIZARD_DISABLE_CONFIGURATION_0 = "[A0K"
const val DATA_WIZARD_DISABLE_CONFIGURATION_1 = "[A0L"
const val DATA_WIZARD_DISABLE_CONFIGURATION_2 = "[A0M"
const val DATA_WIZARD_DISABLE_CONFIGURATION_3 = "[A0N"
const val DATA_WIZARD_DISABLE_CONFIGURATION_4 = "[A0O"
const val DATA_WIZARD_DISABLE_CONFIGURATION_5 = "[A0P"
const val DATA_WIZARD_DISABLE_CONFIGURATION_6 = "[A0Q"
const val DATA_WIZARD_DISABLE_CONFIGURATION_7 = "[A0R"

const val DATA_WIZARD_ENABLE_UNPROCESSED_BEEP = "[A0+"
const val DATA_WIZARD_DISABLE_UNPROCESSED_BEEP = "[A0-"

const val DATA_WIZARD_RESET = "[A0\$"
const val DATA_WIZARD_TRANSMIT_CONFIGURATION_SETTINGS = "[A0/"
const val DATA_WIZARD_TRANSMIT_ALL_BARCODES = "[A0U"
const val DATA_WIZARD_TRANSMIT_VALIDATED_BARCODES = "[A0V"


